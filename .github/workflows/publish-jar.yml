name: Publish jar as artifact
on:
  repository_dispatch:
  # ss indica el nombre que identifica el woerflow que lo va a disparar 
    types: [publish-artifact-event] 
jobs: 
  download-artifact-job:
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: 'product-microservice-0.0.1-SNAPSHOT.jar'
    permissions: 
      contents: write
      pull-requests: write 

    steps:
    - name: Debug Payload
      run: |
        echo ${{ github.event.client_payload.base_branch }} 
    # Descargar codigo desde la rama default para llevarla a Dockerfile y crear una imagen dockerizada

    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.client_payload.base_branch }}
        fetch-depth: 0

    - name: check last hashid
      run: |
        git log -2

    # Configuracion de Java y validacion de que el codigo es compilable
    - name: setup java 17
      uses: actions/setup-java@v4
      with: 
        distribution: 'temurin'
        java-version: '17'

    - name: Cache local Maven repository   
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          s{{ runner.os }}-maven-
          
    - name: build with maven
    # SNAPSHOT hace referencia a la creacion de un copia de tu codigo en un tiempo determinado 
    # -- batch-mode no habra interaccion de usuario
    # --update-snapshots

      run: |
        mvn clean test package -DskipTest=true --batch-mode --update-snapshots
        echo ls -R target/
        echo ls -la
# Publica el artefacto  generado
    - name: Publish package
      if: success()
      uses: actions/upload-artifact@v4
      with: 
        name: artifactjar
        path: ${{ github.workspace }}/target/${{ env.ARTIFACT_NAME }}

# Llama checksum of artifact
    - name: Verify SHA1sum
      if: success()
      id: cal_cheksum_jar
      run: |
        ls -la ${{ github.workspace }}/target/
        SHA1=$(sha1sum ${{ github.workspace }}/target/$ARTIFACT_NAME | awk '{ print $1}')
        JSON=\''{"message": "publish artifact","artifact_name":"'"$ARTIFACT_NAME"'","checksum": "'"$SHA1"'"}'\'
        echo JSON_PAYLOAD=$(printf '%s\n' "$JSON") >> $GITHUB_ENV
        echo $SHA1

#llama a deploy artefact
    - name: trigger deploy artifact 
      if: success()
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.TOKEN }}
        repository: ${{ github.repository }}
        event-type: deploy-artifact-event 
        client-payload: ${{fromJSON(env.JSON_PAYLOAD) }}
